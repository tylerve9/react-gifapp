{"version":3,"sources":["AddCategory.js","helpers/getGifs.js","GifGridItem.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","apiUrl","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"6KAsCeA,EAlCK,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAEpB,EAAqCC,mBAAS,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACDJ,GAA6B,KAAfA,GAAsBA,EAAWK,OAAOC,OAAS,GACxDR,GAAe,SAAAS,GAAI,OAAOP,GAAP,mBAAsBO,OACjDN,EAAc,KAId,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAhBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,QAkBhBG,YAAY,iB,+BC1BtBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACNC,EADM,kDAC+CC,UAAUH,GADzD,+DAEOI,MAAMF,GAFb,cAENG,EAFM,gBAGWA,EAAKC,OAHhB,uBAGJC,EAHI,EAGJA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAI1CG,QAAQC,IAAIT,GAZA,kBAaLA,GAbK,4CAAH,sDAgBET,ICdFmB,EAAc,SAAC,GAAmB,IAAjBN,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEjC,OACI,sBAAKM,UAAU,+CAAf,UACI,qBAAKC,IAAMP,EAAMQ,IAAMT,IACvB,kCAAMA,EAAN,WC4BGU,EAhCC,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAcf,ECfwB,SAAEA,GAC1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNgB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAW,WACP3B,EAASC,GACJ2B,MAAM,SAAAC,GAAI,OACPH,EAAS,CACLlB,KAAMqB,EACNL,SAAS,SAGtB,CAAEvB,IACEwB,EDA2BK,CAAa7B,GAAjCc,EAAd,EAAQP,KAAcgB,EAAtB,EAAsBA,QAGtB,OACI,gCACI,qBAAIJ,UAAU,0CAAd,cAA0DnB,EAA1D,OACCuB,GACG,mBAAGJ,UAAU,0CAAb,wBACH,qBAAKA,UAAU,YAAf,SACIL,EAAOL,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEF3BmB,EAtBM,WAEjB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAIA,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,uBACA,uBACA,8BACM+C,EAAWtB,KAAI,SAAAuB,GAAG,OAAI,cAAC,EAAD,CAAmBhC,SAAUgC,GAAfA,Y,YCXtDC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5e1f3bf6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\n\r\nconst AddCategory = ( { setCategories }) => {\r\n\r\n    const [inputValue, setInputValue ] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        (inputValue && inputValue !== '' && (inputValue.trim().length > 2)) && \r\n                setCategories( cats =>  [ inputValue, ...cats ] );\r\n        setInputValue('');\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={ inputValue } \r\n                onChange={\r\n                    handleInputChange\r\n                } \r\n                placeholder=\"Search...\"\r\n            />\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","\r\nconst getGifs = async ( category ) => {\r\n    const apiUrl = `https://api.giphy.com/v1/gifs/search?&q=${ encodeURI(category) }&api_key=ltja1mIkVsrcd4AhnPbfppPiGMOTAzUv&limit=10`;\r\n    const resp = await fetch(apiUrl);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n    console.log(gifs);\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;\r\n","import React from 'react';\r\n\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUpBig \">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useFecthGifs } from './hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs( category ).then( setImages );\r\n    // }, [ category ]);\r\n\r\n    // <div>\r\n    //             { images.map( {id, title} => ( \r\n    //                 <p key={ img.id } > { img.title } </p> \r\n    //             )) }\r\n    //         </div>\r\n\r\n    const { data: images, loading } = useFecthGifs(category);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"animate__animated animate__fadeInUpBig \"> {category} </h3>\r\n            {loading &&\r\n                <p className=\" animate__animated animate__fadeInUpBig\">loading...</p>}\r\n            {<div className=\"card-grid\">\r\n                {images.map(img => (\r\n                    <GifGridItem key={img.id} {...img} />\r\n                ))}\r\n            </div>}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default GifGrid;","import { useState, useEffect } from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nexport const useFecthGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                }) \r\n        );\r\n    }, [ category ]);\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Samurai X']);\r\n    //'One Punch', , 'Dragon Ball'\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <br />\r\n            <AddCategory setCategories={setCategories} />\r\n            <br />\r\n            <hr />\r\n            <br />\r\n            <div>\r\n                { categories.map(cat => <GifGrid key={cat} category={cat} />) }\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport 'animate.css';\nimport './index.css';\n\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}